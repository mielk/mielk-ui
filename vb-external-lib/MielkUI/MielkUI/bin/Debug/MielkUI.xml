<?xml version="1.0"?>
<doc>
<assembly>
<name>
MielkUI
</name>
</assembly>
<members>
<member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.Invalidate">
	<summary>
 Invalidates the rectangle or region that you specify in lprcUpdate or hrgnUpdate.
 You can set only one of these parameters to a non-NULL value. If both are NULL, RDW_INVALIDATE invalidates the entire window.
 </summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.InternalPaint">
	<summary>Causes the OS to post a WM_PAINT message to the window regardless of whether a portion of the window is invalid.</summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.Erase">
	<summary>
 Causes the window to receive a WM_ERASEBKGND message when the window is repainted.
 Specify this value in combination with the RDW_INVALIDATE value; otherwise, RDW_ERASE has no effect.
 </summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.Validate">
	<summary>
 Validates the rectangle or region that you specify in lprcUpdate or hrgnUpdate.
 You can set only one of these parameters to a non-NULL value. If both are NULL, RDW_VALIDATE validates the entire window.
 This value does not affect internal WM_PAINT messages.
 </summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.NoErase">
	<summary>Suppresses any pending WM_ERASEBKGND messages.</summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.NoChildren">
	<summary>Excludes child windows, if any, from the repainting operation.</summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.AllChildren">
	<summary>Includes child windows, if any, in the repainting operation.</summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.UpdateNow">
	<summary>Causes the affected windows, which you specify by setting the RDW_ALLCHILDREN and RDW_NOCHILDREN values, to receive WM_ERASEBKGND and WM_PAINT messages before the RedrawWindow returns, if necessary.</summary>
</member><member name="F:MielkUI.TransparentWindow.RedrawWindowFlags.EraseNow">
	<summary>
 Causes the affected windows, which you specify by setting the RDW_ALLCHILDREN and RDW_NOCHILDREN values, to receive WM_ERASEBKGND messages before RedrawWindow returns, if necessary.
 The affected windows receive WM_PAINT messages at the ordinary time.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.Hide">
	<summary>
 Hides the window and activates another window.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.Normal">
	<summary>
 Activates and displays a window. If the window is minimized or 
 maximized, the system restores it to its original size and position.
 An application should specify this flag when displaying the window 
 for the first time.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ShowMinimized">
	<summary>
 Activates the window and displays it as a minimized window.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.Maximize">
	<summary>
 Maximizes the specified window.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ShowMaximized">
	<summary>
 Activates the window and displays it as a maximized window.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ShowNoActivate">
	<summary>
 Displays a window in its most recent size and position. This value 
 is similar to <see cref="!:Win32.ShowWindowCommands.Normal"/>, except 
 the window is not actived.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.Show">
	<summary>
 Activates the window and displays it in its current size and position. 
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.Minimize">
	<summary>
 Minimizes the specified window and activates the next top-level 
 window in the Z order.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ShowMinNoActive">
	<summary>
 Displays the window as a minimized window. This value is similar to
 <see cref="!:Win32.ShowWindowCommands.ShowMinimized"/>, except the 
 window is not activated.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ShowNA">
	<summary>
 Displays the window in its current size and position. This value is 
 similar to <see cref="!:Win32.ShowWindowCommands.Show"/>, except the 
 window is not activated.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.Restore">
	<summary>
 Activates and displays the window. If the window is minimized or 
 maximized, the system restores it to its original size and position. 
 An application should specify this flag when restoring a minimized window.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ShowDefault">
	<summary>
 Sets the show state based on the SW_* value specified in the 
 STARTUPINFO structure passed to the CreateProcess function by the 
 program that started the application.
 </summary>
</member><member name="F:MielkUI.Window.ShowWindowCommands.ForceMinimize">
	<summary>
		<b>Windows 2000/XP:</b> Minimizes a window, even if the thread 
 that owns the window is not responding. This flag should only be 
 used when minimizing windows from a different thread.
 </summary>
</member><member name="P:MielkUI.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:MielkUI.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:MielkUI.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>